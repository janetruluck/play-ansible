#!/bin/bash
# {{ ansible_managed }}
# chkconfig: 345 20 80
# description: Play start/shutdown script
# processname: play
#
# Instalation:
# copy file to /etc/init.d
# chmod +x /etc/init.d/play
# chkconfig --add /etc/init.d/play
# chkconfig play on
#
# Usage: (as {{ user }})
# service play start
# service play stop
# service play status
#
# Remember, you need python 2.6 to run the play command
# Also, you may want to temporarily remove the >/dev/null for debugging purposes
 
# Path to play install folder
PLAY_HOME={{ play_home }}
PLAY=$PLAY_HOME/play/play
 
# Path to the JVM
JAVA_HOME={{ java_home }}
export JAVA_HOME
 
# User running the Play process
USER={{ user }}
 
# Path to the application
APPLICATION_PATH={{ current_path }}
APPLICATION_MODE=prod
 
#APPLICATION2_PATH=/path/to/application2
#APPLICATION_MODE=prod
 
# source function library
. /lib/lsb/init-functions
 
start() {
        echo -n "Starting Play service: "
        rm -f ${APPLICATION_PATH}/server.pid    
        su $USER -c "${PLAY} start ${APPLICATION_PATH} --%production >/dev/null"
        RETVAL=$?
 
        # You may want to start more applications as follows
        # [ $RETVAL -eq 0 ] && su $USER -c "${PLAY} start application2"
        # RETVAL=$?
 
        if [ $RETVAL -eq 0 ]; then
            log_end_msg 0
        else
            log_end_msg 1
        fi  
}
stop() {
        echo -n "Shutting down Play service: "
        ${PLAY} stop ${APPLICATION_PATH} > /dev/null
        # ${PLAY} stop application2 > /dev/null
 
        RETVAL=$?
 
        if [ $RETVAL -eq 0 ]; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}
status() {
        test -f ${APPLICATION_PATH}/RUNNING_PID
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
                echo play is running as pid `cat ${APPLICATION_PATH}/RUNNING_PID`
        else
                echo play is not running
        fi
}
clean() {
        rm -f ${APPLICATION_PATH}/RUNNING_PID
}
case "$1" in
        start)
        clean
        start
        ;;
        stop)
        stop
        ;;
        restart|reload)
        stop
        sleep 10
        start
        ;;
        status)
        status
        ;;
        clean)
        clean
        ;;
        *)
        echo "Usage: $0 {start|stop|restart|status}"
esac
exit 0